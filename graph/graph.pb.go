// Code generated by protoc-gen-go. DO NOT EDIT.
// source: graph.proto

package graph

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Row_Type int32

const (
	Row_UNKNOWN Row_Type = 0
	Row_STDLIB  Row_Type = 1
	Row_LIBRARY Row_Type = 2
	Row_PROGRAM Row_Type = 3
)

var Row_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "STDLIB",
	2: "LIBRARY",
	3: "PROGRAM",
}

var Row_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"STDLIB":  1,
	"LIBRARY": 2,
	"PROGRAM": 3,
}

func (x Row_Type) String() string {
	return proto.EnumName(Row_Type_name, int32(x))
}

func (Row_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3e4c656902fc0e6b, []int{0, 0}
}

// A Row is a single row of the dependency graph adjacency list.
type Row struct {
	// The simple name and import path of the package whose row this is.
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImportPath string `protobuf:"bytes,2,opt,name=import_path,json=importPath,proto3" json:"import_path,omitempty"`
	// The repository where the package was defined.
	Repository string `protobuf:"bytes,3,opt,name=repository,proto3" json:"repository,omitempty"`
	// The import paths of the direct dependencies of source.
	Directs []string `protobuf:"bytes,4,rep,name=directs,proto3" json:"directs,omitempty"`
	// The names and content digests of source files in this package.
	SourceFiles []*Row_File `protobuf:"bytes,5,rep,name=source_files,json=sourceFiles,proto3" json:"source_files,omitempty"`
	// Classify the package type according to its role, if known.
	Type                 Row_Type `protobuf:"varint,6,opt,name=type,proto3,enum=graph.Row_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e4c656902fc0e6b, []int{0}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Row) GetImportPath() string {
	if m != nil {
		return m.ImportPath
	}
	return ""
}

func (m *Row) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *Row) GetDirects() []string {
	if m != nil {
		return m.Directs
	}
	return nil
}

func (m *Row) GetSourceFiles() []*Row_File {
	if m != nil {
		return m.SourceFiles
	}
	return nil
}

func (m *Row) GetType() Row_Type {
	if m != nil {
		return m.Type
	}
	return Row_UNKNOWN
}

type Row_File struct {
	RepoPath             string   `protobuf:"bytes,1,opt,name=repo_path,json=repoPath,proto3" json:"repo_path,omitempty"`
	Digest               []byte   `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Row_File) Reset()         { *m = Row_File{} }
func (m *Row_File) String() string { return proto.CompactTextString(m) }
func (*Row_File) ProtoMessage()    {}
func (*Row_File) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e4c656902fc0e6b, []int{0, 0}
}

func (m *Row_File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row_File.Unmarshal(m, b)
}
func (m *Row_File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row_File.Marshal(b, m, deterministic)
}
func (m *Row_File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row_File.Merge(m, src)
}
func (m *Row_File) XXX_Size() int {
	return xxx_messageInfo_Row_File.Size(m)
}
func (m *Row_File) XXX_DiscardUnknown() {
	xxx_messageInfo_Row_File.DiscardUnknown(m)
}

var xxx_messageInfo_Row_File proto.InternalMessageInfo

func (m *Row_File) GetRepoPath() string {
	if m != nil {
		return m.RepoPath
	}
	return ""
}

func (m *Row_File) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

func init() {
	proto.RegisterEnum("graph.Row_Type", Row_Type_name, Row_Type_value)
	proto.RegisterType((*Row)(nil), "graph.Row")
	proto.RegisterType((*Row_File)(nil), "graph.Row.File")
}

func init() { proto.RegisterFile("graph.proto", fileDescriptor_3e4c656902fc0e6b) }

var fileDescriptor_3e4c656902fc0e6b = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0xc6, 0xed, 0xda, 0x75, 0xf6, 0xed, 0xd0, 0x92, 0x83, 0x04, 0x05, 0x2d, 0xf3, 0xd2, 0x53,
	0x0f, 0xf3, 0x24, 0x9e, 0x36, 0x44, 0x19, 0xce, 0x6e, 0xbc, 0x4e, 0xc4, 0xd3, 0xa8, 0x5b, 0x5c,
	0x03, 0x9b, 0x09, 0x49, 0x64, 0xf4, 0x03, 0xfa, 0xbd, 0x24, 0x89, 0x22, 0xde, 0xde, 0xe7, 0x0f,
	0xe1, 0xf7, 0x04, 0xd2, 0x8d, 0xaa, 0x65, 0x53, 0x4a, 0x25, 0x8c, 0x20, 0x5d, 0x27, 0x06, 0x5f,
	0x1d, 0x08, 0x51, 0xec, 0x09, 0x81, 0xe8, 0xa3, 0xde, 0x31, 0x1a, 0xe4, 0x41, 0x91, 0xa0, 0xbb,
	0xc9, 0x05, 0xa4, 0x7c, 0x27, 0x85, 0x32, 0x4b, 0x59, 0x9b, 0x86, 0x76, 0x5c, 0x04, 0xde, 0x9a,
	0xd7, 0xa6, 0x21, 0xe7, 0x00, 0x8a, 0x49, 0xa1, 0xb9, 0x11, 0xaa, 0xa5, 0xa1, 0xcf, 0xff, 0x1c,
	0x42, 0xa1, 0xb7, 0xe6, 0x8a, 0xad, 0x8c, 0xa6, 0x51, 0x1e, 0x16, 0x09, 0xfe, 0x4a, 0x32, 0x84,
	0xbe, 0x16, 0x9f, 0x6a, 0xc5, 0x96, 0xef, 0x7c, 0xcb, 0x34, 0xed, 0xe6, 0x61, 0x91, 0x0e, 0x8f,
	0x4b, 0x4f, 0x88, 0x62, 0x5f, 0xde, 0xf1, 0x2d, 0xc3, 0xd4, 0x97, 0xec, 0xad, 0xc9, 0x25, 0x44,
	0xa6, 0x95, 0x8c, 0xc6, 0x79, 0x50, 0x1c, 0xfd, 0xeb, 0x2e, 0x5a, 0xc9, 0xd0, 0x85, 0xa7, 0x37,
	0x10, 0xd9, 0x36, 0x39, 0x83, 0xc4, 0x82, 0x78, 0x72, 0x3f, 0xea, 0xd0, 0x1a, 0x8e, 0xfb, 0x04,
	0xe2, 0x35, 0xdf, 0x30, 0x6d, 0xdc, 0xa6, 0x3e, 0xfe, 0xa8, 0xc1, 0x35, 0x44, 0xf6, 0x29, 0x92,
	0x42, 0xef, 0xb9, 0x7a, 0xa8, 0x66, 0x2f, 0x55, 0x76, 0x40, 0x00, 0xe2, 0xa7, 0xc5, 0xed, 0x74,
	0x32, 0xce, 0x02, 0x1b, 0x4c, 0x27, 0x63, 0x1c, 0xe1, 0x6b, 0xd6, 0xb1, 0x62, 0x8e, 0xb3, 0x7b,
	0x1c, 0x3d, 0x66, 0xe1, 0x5b, 0xec, 0x7e, 0xf5, 0xea, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x62, 0x11,
	0x1e, 0x8e, 0x64, 0x01, 0x00, 0x00,
}
